Hibernate(冬眠) 实体层（持久化层）
struts要做的问题：程序的架构设计时间，验证问题，分发操作问题，传输的加密，Cookie禁用
只要是项目，都有分页显示（出现数据库不统一）
数据库的分页
Oracle.DB2:ROWNUM
SQL Server:TOP
MySQL:Limit
分页分为三种
一种是在数据库中操作分页
另一种是servlet的操作分页
最后一种是页面的javascript分页
解决分页问题的方法：
方案一：利用合理的类的结构设计实现数据库移值（java开发人员惨）
这样子每一个数据库都要一个DAOImpl，代码严重重复
方案二：利用数九之中定义的“存储过程”来控制
给每个定义相同的名字，通过名字去找具体的操作类（"存储过程"）（数据开发人员惨）
方案三：
EJB（Enterprise java bean）分为三种：SessionBean(业务层), Entity Bean(实体层),Message Driver Bean
思想：让程序员应该注意的是具体业务的开发，而不是数据的开发，数据方面应该交给具体的容器去做（但是它却没有做好分页处理，只是把所有数据都保存在内存里面）
最后产生了hibernate
EJB2.x实现了可移植性，不过还是将数据都作为实体保存在内存中
Hibernate(真正流行起来的框架，实现了全自动化)自动化的控制非常难，性能损耗大
MyBatis(半自动化)支持了许多Ibatis没有的功能
JPA（实体层开发标准）提供了所有Annotation标准

不管是什么框架 核心原理=反射+XML配置+DOM4J解析

POJO就是VO就行映射